################################ Options ################################
# General options
set -g default-terminal "screen-256color"
set-window-option -g xterm-keys off
set-option -g default-shell /usr/bin/zsh

# remap prefix to Control + q
set -g prefix C-q
bind 'C-q' send-prefix
unbind C-b

# Friendly numbering scheme
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

# Mouse on
setw -g mouse on

# == ACTIVATE SCROLLING ON MOUSE  WHEEL ==
# if-shell shell-command command [command]
#  -F don't execute shell-command, evaluate zero = false
#  -t target-pane ('=' : mouse)
# send-keys -M - mouse passthrough
# #{mouse_any_flag} - "pane mouse any flag" (pane contains mouse-aware app)
# #{pane_in_mode} - "pane is in any mode" (copy-mode)
# copy-mode - start copy mode
#  -e scrolling to the bottom should end copy mode
bind -n WheelUpPane \
     if-shell \
     	      -F \
	      -t = \
	      "#{mouse_any_flag}" \
	      "send-keys -M" \
	      "if \
	      	  -Ft= \
		  '#{pane_in_mode}' \
		  'send-keys -M' \
		  'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M



# Scrolling shift-up/pgup
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
set -ga terminal-overrides ',screen*:cvvis=\E[34l\E[?25h'

# Monitor activity
setw -g monitor-activity on
set -g visual-activity off

# 1M lines history
set -g history-limit 100000

# Active pane visibility
set -g message-style "bg=black,fg=white"
setw -g pane-border-style "fg=colour22"
setw -g pane-active-border-style "fg=brightgreen"


################################ Bindings ################################

# Reload configuration
unbind r
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# Split panes
bind-key | split-window -h
bind-key \\ split-window -h -l 81 -d
bind-key - split-window

# Move around panes Alt-h/j/k/l, or emacs windows if it's running
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-h || tmux-switch -L || tmux select-pane -L) || tmux display-message 'no pane to the left'"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-l || tmux-switch -R || tmux select-pane -R) || tmux display-message 'no pane to the right'"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-k || tmux-switch -U || tmux select-pane -U) || tmux display-message 'no pane up'"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-j || tmux-switch -D || tmux select-pane -D) || tmux display-message 'no pane down'"
# ADD THESE LINES TO YOUR EMACS CONFIG (~/.emacs or ~/.emacs.d/init.el)
# ;; Try to move direction, which is supplied as arg
# ;; If cannot move that direction, send a tmux command to do appropriate move
# (defun windmove-emacs-or-tmux(dir tmux-cmd)
#   (interactive)
#   (if (ignore-errors (funcall (intern (concat "windmove-" dir))))
#       nil                       ;; Moving within emacs
#     (shell-command tmux-cmd)) ;; At edges, send command to tmux
#   )
# ;; Move between windows and panes with custom keybindings
# (global-set-key (kbd "M-k")
# 		'(lambda () (interactive) (windmove-emacs-or-tmux "up"    "tmux select-pane -U")))
# (global-set-key (kbd "M-j")
# 		'(lambda () (interactive) (windmove-emacs-or-tmux "down"  "tmux select-pane -D")))
# (global-set-key (kbd "M-l")
# 		'(lambda () (interactive) (windmove-emacs-or-tmux "right" "tmux select-pane -R")))
# (global-set-key (kbd "M-h")
#               '(lambda () (interactive) (windmove-emacs-or-tmux "left"  "tmux select-pane -L")))
#
# THE COMMAND tmux-switch DOES THE FOLLOWING (FEEL FREE TO MODIFY COLOR AND DURATION):
# tmux select-pane $1; tmux select-pane -P 'bg=black'; sleep 0.1; tmux select-pane -P 'bg=default' 


# Move around windows Alt-b/m
bind-key -n M-b previous-window
bind-key -n M-m next-window

# Move windows around Alt-B/M
bind-key -n M-B swap-window -t -1
bind-key -n M-M swap-window -t +1

# Save Buffer to file
bind-key P command-prompt -p 'save history to filename:' \
                          -I '~/tmux.history' \
			  'capture-pane -S -10000000 ; save-buffer %1 ; delete-buffer'

# Tie save-buffer to X clipboard
bind-key C-c run "tmux save-buffer - | xsel -i -b"
bind-key C-v run "xsel -b | tmux load-buffer -; tmux paste-buffer"
bind-key -T emacs-copy C-c send-keys -X copy-pipe "xsel -i -b"

# Use powerline to generate the status line
if-shell "test -f '/usr/share/tmux/powerline.conf'" \
	 "source '/usr/share/tmux/powerline.conf'" \
	 '\
		set -g status-style "bg=black,fg=brightgreen"; \
		set -g status-right-style "bg=brightgreen,fg=black"; \
		set -g status-left-style "bg=brightgreen,fg=black"; \
		set -g status-left "[#S] (#{history_size}/#{history_limit}) > ";\
		set -g status-left-length 20;\
		set -g status-right "  #{=21:pane_title} %H:%M %d-%b-%y @#H";\
		set -g window-status-activity-style "bg=default,fg=default";\
		set -g window-status-current-style "bg=green,fg=black";\
	 '
